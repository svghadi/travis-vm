os: linux-ppc64le

jobs:
  include:
    - stage: Network Test
      name: ping & curl
      script:
        - ifconfig
        - ping -c 4 google.com
        - curl https://public.dhe.ibm.com/ibmdl/export/pub/software/server/ibm-ai/conda/linux-ppc64le/current_repodata.json > log.txt
        - docker run -t centos:7 bash -c 'curl https://public.dhe.ibm.com/ibmdl/export/pub/software/server/ibm-ai/conda/linux-ppc64le/current_repodata.json > log.txt; curl http://storage.googleapis.com/kubernetes-release/release/v1.14.2/bin/linux/ppc64le/kubectl > log1.txt'
             
    - name: apt install
      addons:
        apt:
          update: true
          packages:
            - cmake
            - time
      script:
        - sudo apt update -y
        - sudo apt install -y linux-headers-$(uname -r)

    - stage: C Language Test
      name: GCC
      language: c
      compiler: gcc
      script:
        - $CC --version
    - name: CLANG
      language: c
      compiler: clang
      script:
        - $CC --version
    - name: IBM ATC
      language: cpp
      compiler: /opt/at12.0/bin/gcc
      env: PATH=/opt/at12.0/bin:/opt/at12.0/sbin:$PATH CMAKE_PREFIX_PATH=/opt/at12.0
      script:
        - /opt/at*/bin/gcc --version
      
    - stage: CPP Language Test
      name: GCC
      language: cpp
      compiler: gcc
      script:
        - $CC --version
    - name: CLANG
      language: cpp
      compiler: clang
      script:
        - $CC --version
    - name: IBM ATC
      language: cpp
      compiler: /opt/at12.0/bin/g++
      env: PATH=/opt/at12.0/bin:/opt/at12.0/sbin:$PATH CMAKE_PREFIX_PATH=/opt/at12.0
      script:
        - /opt/at*/bin/g++ --version

    - stage: Go Language Test
      language: go
      go: 1.16.x
      script:
        - go version
        - go get github.com/mattn/goveralls
        - ls -l $GOPATH/bin
    
    - stage: Java Language Test
      name: JDK8
      language: java
      jdk: openjdk8
      script: 
        - java -version
        - mvn --version
    - name: JDK11
      language: java
      jdk: openjdk11
      script: 
        - java -version
        - mvn --version
    - name: JDK15
      language: java
      jdk: openjdk15
      script: 
        - java -version
        - mvn --version

    - stage: Nodejs Language Test
      language: node_js
      node_js: lts/*
      script:
        - npm install -g gulp-cli
        - which gulp
    
    - stage: Perl Language Test
      name: default version
      language: perl
      install: skip
      script: perl -v
    - name: 5.26 version
      language: perl
      perl: 5.26
      install: skip
      script: perl -v
    
    - stage: PHP Language Test
      name: default version
      language: php
      script: php --version
    - name: 8.0 version
      language: php
      php: 8.0
      script: php --version

    - stage: Python Language Test
      name: 2.7 version
      language: python
      python: 2.7
      install: skip
      script: 
        - python --version
        - ls -l $HOME
    - name: 3.8 version
      language: python
      python: 3.8
      install: skip
      script: 
        - python --version
        - ls -l $HOME

    - stage: Ruby Language Test
      name: default version
      language: ruby
      install: skip
      script: 
        - ruby -v
        - gem install bundler
    - name: 2.7 version
      language: ruby
      rvm: 2.7
      install: skip
      script: 
        - ruby -v
        - gem install bundler

    - stage: DB Test
      name: MYSQL
      service: mysql
      before_script: mysql -e 'CREATE DATABASE myapp_test;'
      script:
        - mysql --version
        - mysql -e 'SHOW DATABASES;'
    - name: PostgreSQL
      service: postgresql
      before_script: psql -c 'create database travis_ci_test;' -U postgres
      script:
        - psql --version
        - psql -c 'SELECT datname FROM pg_database;' -U postgres
    - name: Mongodb(Not supported)
      service: mongodb
      script:
        - systemctl is-active mongodb || true
        - echo "Not supported"

    - stage: Service Test
      name: docker
      service: docker
      script:
        - docker version
        - sudo cat /etc/docker/daemon.json
        - systemctl status docker --no-pager -l
        - docker pull alpine:latest
        - docker run -t --rm alpine:latest sh -c 'uname -a && apk update'
